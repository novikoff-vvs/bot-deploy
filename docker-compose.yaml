version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: db
    restart: always
    shm_size: 256mb
    env_file:
      - .env
    environment:
      POSTGRES_USER: highjin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "highjin"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend

  user_service:
    image: registry.novvs.ru/vpn-bot-user-service:latest
    container_name: user_service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./environments/.env.user-service
    volumes:
      - ./environments/.env.user-service:/app/.env
    networks:
      - backend

  payment_service:
    image: registry.novvs.ru/vpn-bot-payment-service:latest
    container_name: payment_service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: highjin
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: vpn_bot
    ports:
      - "1122:1122"
    networks:
      - backend

  bot_service:
    image: registry.novvs.ru/vpn-bot-bot-service:latest
    container_name: bot_service
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./environments/.env.bot-service
    volumes:
      - ./environments/.env.bot-service:/app/.env
    networks:
      - backend

volumes:
  pgdata:
    driver: local

networks:
  backend:
    driver: bridge
